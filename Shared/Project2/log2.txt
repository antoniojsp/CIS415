==6278== Memcheck, a memory error detector
==6278== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6278== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6278== Command: ./part2.out
==6278== 
==6278== Syscall param openat(filename) points to unaddressable byte(s)
==6278==    at 0x4F4BC8E: open (open64.c:47)
==6278==    by 0x4EC8589: _IO_file_open (fileops.c:189)
==6278==    by 0x4EC8589: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:281)
==6278==    by 0x4EBAEA9: __fopen_internal (iofopen.c:78)
==6278==    by 0x4EBAEA9: fopen@@GLIBC_2.2.5 (iofopen.c:89)
==6278==    by 0x108FDD: read_file (in /media/sf_Shared/Project2/part2.out)
==6278==    by 0x108BC5: main (in /media/sf_Shared/Project2/part2.out)
==6278==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==6278== 
 ################### Part2 ################### 
==6278== 
==6278== HEAP SUMMARY:
==6278==     in use at exit: 2,900 bytes in 51 blocks
==6278==   total heap usage: 53 allocs, 2 frees, 11,644 bytes allocated
==6278== 
==6278== LEAK SUMMARY:
==6278==    definitely lost: 0 bytes in 0 blocks
==6278==    indirectly lost: 0 bytes in 0 blocks
==6278==      possibly lost: 0 bytes in 0 blocks
==6278==    still reachable: 2,900 bytes in 51 blocks
==6278==         suppressed: 0 bytes in 0 blocks
==6278== Reachable blocks (those to which a pointer was found) are not shown.
==6278== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==6278== 
==6278== For counts of detected and suppressed errors, rerun with: -v
==6278== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
